
syntax = "proto3";

package types;
option go_package = "github.com/danluki/taskvault/types";

import "google/protobuf/empty.proto";

message RaftServer {
  string id = 1;
	string node = 2;
	string address = 3;
	bool leader = 4;
	bool voter = 5; 
	string raft_protocol = 6;
}

message RaftGetConfigurationResponse {
  repeated RaftServer servers = 1;
  uint64 index = 2;   
}

message RaftRemovePeerByIDRequest {
  string id = 1;
}

message CreateValueRequest {
  string key = 1;
  string value = 2;
}

message CreateValueResponse {
  string key = 1;
  string value = 2;
}

message DeleteValueRequest {
  string key = 1;
}

message DeleteValueResponse {
  string key = 1;
  string value = 2;
}

message UpdateValueRequest {
  string key = 1;
  string value = 2;
}

message UpdateValueResponse {
  string key = 1;
  string value = 2;
}

message GetValueRequest {
  string key = 1;
}

message GetValueResponse {
  string value = 1;
}

message GetAllPairsResponse {
  repeated Pair pairs = 1;
}

message Pair {
  string key = 1;
  string value = 2;
}

service Taskvault {
  rpc CreateValue (CreateValueRequest) returns (CreateValueResponse);
  rpc GetValue (GetValueRequest) returns (GetValueResponse);
  rpc Leave (google.protobuf.Empty) returns (google.protobuf.Empty);
  rpc UpdateValue (UpdateValueRequest) returns (UpdateValueResponse);
  rpc DeleteValue (DeleteValueRequest) returns (DeleteValueResponse);
  rpc RaftGetConfiguration (google.protobuf.Empty) returns (RaftGetConfigurationResponse);
  rpc RaftRemovePeerByID (RaftRemovePeerByIDRequest) returns (google.protobuf.Empty);
  rpc GetAllPairs (google.protobuf.Empty) returns  (GetAllPairsResponse);
}